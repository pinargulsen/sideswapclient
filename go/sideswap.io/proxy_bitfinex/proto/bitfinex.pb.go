// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/bitfinex.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid *float64 `protobuf:"fixed64,1,req,name=bid" json:"bid,omitempty"`
	Ask *float64 `protobuf:"fixed64,2,req,name=ask" json:"ask,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{0}
}

func (x *Price) GetBid() float64 {
	if x != nil && x.Bid != nil {
		return *x.Bid
	}
	return 0
}

func (x *Price) GetAsk() float64 {
	if x != nil && x.Ask != nil {
		return *x.Ask
	}
	return 0
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,req,name=error" json:"error,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type Movement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      *int64   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Currency                *string  `protobuf:"bytes,2,req,name=currency" json:"currency,omitempty"`
	CurrencyName            *string  `protobuf:"bytes,3,req,name=currency_name,json=currencyName" json:"currency_name,omitempty"`
	MtsStarted              *int64   `protobuf:"varint,4,req,name=mts_started,json=mtsStarted" json:"mts_started,omitempty"`
	MtsUpdated              *int64   `protobuf:"varint,5,req,name=mts_updated,json=mtsUpdated" json:"mts_updated,omitempty"`
	Status                  *string  `protobuf:"bytes,6,req,name=status" json:"status,omitempty"`
	Amount                  *float64 `protobuf:"fixed64,7,req,name=amount" json:"amount,omitempty"`
	Fees                    *float64 `protobuf:"fixed64,8,req,name=fees" json:"fees,omitempty"`
	DestinationAddress      *string  `protobuf:"bytes,9,req,name=destination_address,json=destinationAddress" json:"destination_address,omitempty"`
	TransactionId           *string  `protobuf:"bytes,10,req,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	WithdrawTransactionNote *string  `protobuf:"bytes,11,req,name=withdraw_transaction_note,json=withdrawTransactionNote" json:"withdraw_transaction_note,omitempty"`
}

func (x *Movement) Reset() {
	*x = Movement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movement) ProtoMessage() {}

func (x *Movement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movement.ProtoReflect.Descriptor instead.
func (*Movement) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{2}
}

func (x *Movement) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Movement) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *Movement) GetCurrencyName() string {
	if x != nil && x.CurrencyName != nil {
		return *x.CurrencyName
	}
	return ""
}

func (x *Movement) GetMtsStarted() int64 {
	if x != nil && x.MtsStarted != nil {
		return *x.MtsStarted
	}
	return 0
}

func (x *Movement) GetMtsUpdated() int64 {
	if x != nil && x.MtsUpdated != nil {
		return *x.MtsUpdated
	}
	return 0
}

func (x *Movement) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *Movement) GetAmount() float64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *Movement) GetFees() float64 {
	if x != nil && x.Fees != nil {
		return *x.Fees
	}
	return 0
}

func (x *Movement) GetDestinationAddress() string {
	if x != nil && x.DestinationAddress != nil {
		return *x.DestinationAddress
	}
	return ""
}

func (x *Movement) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *Movement) GetWithdrawTransactionNote() string {
	if x != nil && x.WithdrawTransactionNote != nil {
		return *x.WithdrawTransactionNote
	}
	return ""
}

type To struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*To_Login_
	//	*To_Subscribe_
	//	*To_OrderSubmit_
	//	*To_Withdraw_
	//	*To_Transfer_
	//	*To_Movements_
	Msg isTo_Msg `protobuf_oneof:"msg"`
}

func (x *To) Reset() {
	*x = To{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To) ProtoMessage() {}

func (x *To) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To.ProtoReflect.Descriptor instead.
func (*To) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{3}
}

func (m *To) GetMsg() isTo_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *To) GetLogin() *To_Login {
	if x, ok := x.GetMsg().(*To_Login_); ok {
		return x.Login
	}
	return nil
}

func (x *To) GetSubscribe() *To_Subscribe {
	if x, ok := x.GetMsg().(*To_Subscribe_); ok {
		return x.Subscribe
	}
	return nil
}

func (x *To) GetOrderSubmit() *To_OrderSubmit {
	if x, ok := x.GetMsg().(*To_OrderSubmit_); ok {
		return x.OrderSubmit
	}
	return nil
}

func (x *To) GetWithdraw() *To_Withdraw {
	if x, ok := x.GetMsg().(*To_Withdraw_); ok {
		return x.Withdraw
	}
	return nil
}

func (x *To) GetTransfer() *To_Transfer {
	if x, ok := x.GetMsg().(*To_Transfer_); ok {
		return x.Transfer
	}
	return nil
}

func (x *To) GetMovements() *To_Movements {
	if x, ok := x.GetMsg().(*To_Movements_); ok {
		return x.Movements
	}
	return nil
}

type isTo_Msg interface {
	isTo_Msg()
}

type To_Login_ struct {
	Login *To_Login `protobuf:"bytes,1,opt,name=login,oneof"`
}

type To_Subscribe_ struct {
	Subscribe *To_Subscribe `protobuf:"bytes,2,opt,name=subscribe,oneof"`
}

type To_OrderSubmit_ struct {
	OrderSubmit *To_OrderSubmit `protobuf:"bytes,3,opt,name=order_submit,json=orderSubmit,oneof"`
}

type To_Withdraw_ struct {
	Withdraw *To_Withdraw `protobuf:"bytes,4,opt,name=withdraw,oneof"`
}

type To_Transfer_ struct {
	Transfer *To_Transfer `protobuf:"bytes,7,opt,name=transfer,oneof"`
}

type To_Movements_ struct {
	Movements *To_Movements `protobuf:"bytes,6,opt,name=movements,oneof"`
}

func (*To_Login_) isTo_Msg() {}

func (*To_Subscribe_) isTo_Msg() {}

func (*To_OrderSubmit_) isTo_Msg() {}

func (*To_Withdraw_) isTo_Msg() {}

func (*To_Transfer_) isTo_Msg() {}

func (*To_Movements_) isTo_Msg() {}

type From struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*From_BookUpdate_
	//	*From_OrderConfirm_
	//	*From_WalletUpdate_
	//	*From_Withdraw_
	//	*From_Transfer_
	//	*From_Movements_
	//	*From_Error
	Msg isFrom_Msg `protobuf_oneof:"msg"`
}

func (x *From) Reset() {
	*x = From{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From) ProtoMessage() {}

func (x *From) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From.ProtoReflect.Descriptor instead.
func (*From) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{4}
}

func (m *From) GetMsg() isFrom_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *From) GetBookUpdate() *From_BookUpdate {
	if x, ok := x.GetMsg().(*From_BookUpdate_); ok {
		return x.BookUpdate
	}
	return nil
}

func (x *From) GetOrderConfirm() *From_OrderConfirm {
	if x, ok := x.GetMsg().(*From_OrderConfirm_); ok {
		return x.OrderConfirm
	}
	return nil
}

func (x *From) GetWalletUpdate() *From_WalletUpdate {
	if x, ok := x.GetMsg().(*From_WalletUpdate_); ok {
		return x.WalletUpdate
	}
	return nil
}

func (x *From) GetWithdraw() *From_Withdraw {
	if x, ok := x.GetMsg().(*From_Withdraw_); ok {
		return x.Withdraw
	}
	return nil
}

func (x *From) GetTransfer() *From_Transfer {
	if x, ok := x.GetMsg().(*From_Transfer_); ok {
		return x.Transfer
	}
	return nil
}

func (x *From) GetMovements() *From_Movements {
	if x, ok := x.GetMsg().(*From_Movements_); ok {
		return x.Movements
	}
	return nil
}

func (x *From) GetError() *Error {
	if x, ok := x.GetMsg().(*From_Error); ok {
		return x.Error
	}
	return nil
}

type isFrom_Msg interface {
	isFrom_Msg()
}

type From_BookUpdate_ struct {
	BookUpdate *From_BookUpdate `protobuf:"bytes,1,opt,name=book_update,json=bookUpdate,oneof"`
}

type From_OrderConfirm_ struct {
	OrderConfirm *From_OrderConfirm `protobuf:"bytes,2,opt,name=order_confirm,json=orderConfirm,oneof"`
}

type From_WalletUpdate_ struct {
	WalletUpdate *From_WalletUpdate `protobuf:"bytes,3,opt,name=wallet_update,json=walletUpdate,oneof"`
}

type From_Withdraw_ struct {
	Withdraw *From_Withdraw `protobuf:"bytes,4,opt,name=withdraw,oneof"`
}

type From_Transfer_ struct {
	Transfer *From_Transfer `protobuf:"bytes,5,opt,name=transfer,oneof"`
}

type From_Movements_ struct {
	Movements *From_Movements `protobuf:"bytes,6,opt,name=movements,oneof"`
}

type From_Error struct {
	Error *Error `protobuf:"bytes,50,opt,name=error,oneof"`
}

func (*From_BookUpdate_) isFrom_Msg() {}

func (*From_OrderConfirm_) isFrom_Msg() {}

func (*From_WalletUpdate_) isFrom_Msg() {}

func (*From_Withdraw_) isFrom_Msg() {}

func (*From_Transfer_) isFrom_Msg() {}

func (*From_Movements_) isFrom_Msg() {}

func (*From_Error) isFrom_Msg() {}

type To_Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Secret *string `protobuf:"bytes,2,req,name=secret" json:"secret,omitempty"`
}

func (x *To_Login) Reset() {
	*x = To_Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To_Login) ProtoMessage() {}

func (x *To_Login) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To_Login.ProtoReflect.Descriptor instead.
func (*To_Login) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{3, 0}
}

func (x *To_Login) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *To_Login) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

type To_Subscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName *string `protobuf:"bytes,1,req,name=book_name,json=bookName" json:"book_name,omitempty"`
}

func (x *To_Subscribe) Reset() {
	*x = To_Subscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To_Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To_Subscribe) ProtoMessage() {}

func (x *To_Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To_Subscribe.ProtoReflect.Descriptor instead.
func (*To_Subscribe) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{3, 1}
}

func (x *To_Subscribe) GetBookName() string {
	if x != nil && x.BookName != nil {
		return *x.BookName
	}
	return ""
}

type To_OrderSubmit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName *string  `protobuf:"bytes,1,req,name=book_name,json=bookName" json:"book_name,omitempty"`
	Cid      *int64   `protobuf:"varint,2,req,name=cid" json:"cid,omitempty"`
	Amount   *float64 `protobuf:"fixed64,3,req,name=amount" json:"amount,omitempty"`
}

func (x *To_OrderSubmit) Reset() {
	*x = To_OrderSubmit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To_OrderSubmit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To_OrderSubmit) ProtoMessage() {}

func (x *To_OrderSubmit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To_OrderSubmit.ProtoReflect.Descriptor instead.
func (*To_OrderSubmit) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{3, 2}
}

func (x *To_OrderSubmit) GetBookName() string {
	if x != nil && x.BookName != nil {
		return *x.BookName
	}
	return ""
}

func (x *To_OrderSubmit) GetCid() int64 {
	if x != nil && x.Cid != nil {
		return *x.Cid
	}
	return 0
}

func (x *To_OrderSubmit) GetAmount() float64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type To_Withdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Secret  *string  `protobuf:"bytes,2,req,name=secret" json:"secret,omitempty"`
	Wallet  *string  `protobuf:"bytes,3,req,name=wallet" json:"wallet,omitempty"`
	Method  *string  `protobuf:"bytes,4,req,name=method" json:"method,omitempty"`
	Amount  *float64 `protobuf:"fixed64,5,req,name=amount" json:"amount,omitempty"`
	Address *string  `protobuf:"bytes,6,req,name=address" json:"address,omitempty"`
}

func (x *To_Withdraw) Reset() {
	*x = To_Withdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To_Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To_Withdraw) ProtoMessage() {}

func (x *To_Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To_Withdraw.ProtoReflect.Descriptor instead.
func (*To_Withdraw) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{3, 3}
}

func (x *To_Withdraw) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *To_Withdraw) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *To_Withdraw) GetWallet() string {
	if x != nil && x.Wallet != nil {
		return *x.Wallet
	}
	return ""
}

func (x *To_Withdraw) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *To_Withdraw) GetAmount() float64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *To_Withdraw) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

type To_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Secret     *string  `protobuf:"bytes,2,req,name=secret" json:"secret,omitempty"`
	From       *string  `protobuf:"bytes,3,req,name=from" json:"from,omitempty"`
	To         *string  `protobuf:"bytes,4,req,name=to" json:"to,omitempty"`
	Currency   *string  `protobuf:"bytes,5,req,name=currency" json:"currency,omitempty"`
	CurrencyTo *string  `protobuf:"bytes,6,req,name=currency_to,json=currencyTo" json:"currency_to,omitempty"`
	Amount     *float64 `protobuf:"fixed64,7,req,name=amount" json:"amount,omitempty"`
}

func (x *To_Transfer) Reset() {
	*x = To_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To_Transfer) ProtoMessage() {}

func (x *To_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To_Transfer.ProtoReflect.Descriptor instead.
func (*To_Transfer) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{3, 4}
}

func (x *To_Transfer) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *To_Transfer) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *To_Transfer) GetFrom() string {
	if x != nil && x.From != nil {
		return *x.From
	}
	return ""
}

func (x *To_Transfer) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

func (x *To_Transfer) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *To_Transfer) GetCurrencyTo() string {
	if x != nil && x.CurrencyTo != nil {
		return *x.CurrencyTo
	}
	return ""
}

func (x *To_Transfer) GetAmount() float64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type To_Movements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Secret *string `protobuf:"bytes,2,req,name=secret" json:"secret,omitempty"`
	Start  *int64  `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	End    *int64  `protobuf:"varint,4,opt,name=end" json:"end,omitempty"`
	Limit  *int32  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
}

func (x *To_Movements) Reset() {
	*x = To_Movements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *To_Movements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*To_Movements) ProtoMessage() {}

func (x *To_Movements) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use To_Movements.ProtoReflect.Descriptor instead.
func (*To_Movements) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{3, 5}
}

func (x *To_Movements) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *To_Movements) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *To_Movements) GetStart() int64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *To_Movements) GetEnd() int64 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

func (x *To_Movements) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type From_BookUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName *string `protobuf:"bytes,1,req,name=book_name,json=bookName" json:"book_name,omitempty"`
	Price    *Price  `protobuf:"bytes,2,req,name=price" json:"price,omitempty"`
}

func (x *From_BookUpdate) Reset() {
	*x = From_BookUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From_BookUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From_BookUpdate) ProtoMessage() {}

func (x *From_BookUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From_BookUpdate.ProtoReflect.Descriptor instead.
func (*From_BookUpdate) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{4, 0}
}

func (x *From_BookUpdate) GetBookName() string {
	if x != nil && x.BookName != nil {
		return *x.BookName
	}
	return ""
}

func (x *From_BookUpdate) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type From_OrderConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookName *string  `protobuf:"bytes,1,req,name=book_name,json=bookName" json:"book_name,omitempty"`
	Cid      *int64   `protobuf:"varint,2,req,name=cid" json:"cid,omitempty"`
	Id       *int64   `protobuf:"varint,3,req,name=id" json:"id,omitempty"`
	Amount   *float64 `protobuf:"fixed64,4,req,name=amount" json:"amount,omitempty"`
	Price    *float64 `protobuf:"fixed64,5,req,name=price" json:"price,omitempty"`
}

func (x *From_OrderConfirm) Reset() {
	*x = From_OrderConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From_OrderConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From_OrderConfirm) ProtoMessage() {}

func (x *From_OrderConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From_OrderConfirm.ProtoReflect.Descriptor instead.
func (*From_OrderConfirm) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{4, 1}
}

func (x *From_OrderConfirm) GetBookName() string {
	if x != nil && x.BookName != nil {
		return *x.BookName
	}
	return ""
}

func (x *From_OrderConfirm) GetCid() int64 {
	if x != nil && x.Cid != nil {
		return *x.Cid
	}
	return 0
}

func (x *From_OrderConfirm) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *From_OrderConfirm) GetAmount() float64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *From_OrderConfirm) GetPrice() float64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

type From_WalletUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency *string  `protobuf:"bytes,1,req,name=currency" json:"currency,omitempty"`
	Balance  *float64 `protobuf:"fixed64,2,req,name=balance" json:"balance,omitempty"`
}

func (x *From_WalletUpdate) Reset() {
	*x = From_WalletUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From_WalletUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From_WalletUpdate) ProtoMessage() {}

func (x *From_WalletUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From_WalletUpdate.ProtoReflect.Descriptor instead.
func (*From_WalletUpdate) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{4, 2}
}

func (x *From_WalletUpdate) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *From_WalletUpdate) GetBalance() float64 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

type From_Withdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithdrawId *int64 `protobuf:"varint,2,req,name=withdraw_id,json=withdrawId" json:"withdraw_id,omitempty"`
}

func (x *From_Withdraw) Reset() {
	*x = From_Withdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From_Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From_Withdraw) ProtoMessage() {}

func (x *From_Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From_Withdraw.ProtoReflect.Descriptor instead.
func (*From_Withdraw) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{4, 3}
}

func (x *From_Withdraw) GetWithdrawId() int64 {
	if x != nil && x.WithdrawId != nil {
		return *x.WithdrawId
	}
	return 0
}

type From_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
}

func (x *From_Transfer) Reset() {
	*x = From_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From_Transfer) ProtoMessage() {}

func (x *From_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From_Transfer.ProtoReflect.Descriptor instead.
func (*From_Transfer) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{4, 4}
}

func (x *From_Transfer) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type From_Movements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   *bool       `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Key       *string     `protobuf:"bytes,2,req,name=key" json:"key,omitempty"`
	Movements []*Movement `protobuf:"bytes,3,rep,name=movements" json:"movements,omitempty"`
}

func (x *From_Movements) Reset() {
	*x = From_Movements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bitfinex_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *From_Movements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*From_Movements) ProtoMessage() {}

func (x *From_Movements) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bitfinex_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use From_Movements.ProtoReflect.Descriptor instead.
func (*From_Movements) Descriptor() ([]byte, []int) {
	return file_proto_bitfinex_proto_rawDescGZIP(), []int{4, 5}
}

func (x *From_Movements) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *From_Movements) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *From_Movements) GetMovements() []*Movement {
	if x != nil {
		return x.Movements
	}
	return nil
}

var File_proto_bitfinex_proto protoreflect.FileDescriptor

var file_proto_bitfinex_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x62, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x03, 0x61,
	0x73, 0x6b, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xf5, 0x02, 0x0a, 0x08, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x74, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x74, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x08, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x19, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x17, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0xbf, 0x08, 0x0a, 0x02, 0x54, 0x6f,
	0x12, 0x3f, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x4b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x52,
	0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x48, 0x00, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x48, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x69, 0x64, 0x65,
	0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69,
	0x6e, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x31, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x28, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0x54, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x96, 0x01, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a,
	0xad, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x73, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb4, 0x08, 0x0a, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x51, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x69, 0x64, 0x65,
	0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69,
	0x6e, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6f, 0x6f,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x72, 0x6f, 0x6d, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x48, 0x00, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x12, 0x57, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77,
	0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65,
	0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x69,
	0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74,
	0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x6f, 0x6d,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x00, 0x52, 0x08, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x4a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77,
	0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65,
	0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x4d, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x3c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x65,
	0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73,
	0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e,
	0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x7b, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x1a, 0x44, 0x0a, 0x0c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x2b, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x49, 0x64, 0x1a, 0x24, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x7e, 0x0a, 0x09, 0x4d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77,
	0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65,
	0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x42, 0x22, 0x5a, 0x20, 0x73, 0x69, 0x64, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x69,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x62, 0x69, 0x74, 0x66, 0x69, 0x6e, 0x65, 0x78,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_proto_bitfinex_proto_rawDescOnce sync.Once
	file_proto_bitfinex_proto_rawDescData = file_proto_bitfinex_proto_rawDesc
)

func file_proto_bitfinex_proto_rawDescGZIP() []byte {
	file_proto_bitfinex_proto_rawDescOnce.Do(func() {
		file_proto_bitfinex_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_bitfinex_proto_rawDescData)
	})
	return file_proto_bitfinex_proto_rawDescData
}

var file_proto_bitfinex_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_bitfinex_proto_goTypes = []interface{}{
	(*Price)(nil),             // 0: sideswap.proxy.bitfinex.proto.Price
	(*Error)(nil),             // 1: sideswap.proxy.bitfinex.proto.Error
	(*Movement)(nil),          // 2: sideswap.proxy.bitfinex.proto.Movement
	(*To)(nil),                // 3: sideswap.proxy.bitfinex.proto.To
	(*From)(nil),              // 4: sideswap.proxy.bitfinex.proto.From
	(*To_Login)(nil),          // 5: sideswap.proxy.bitfinex.proto.To.Login
	(*To_Subscribe)(nil),      // 6: sideswap.proxy.bitfinex.proto.To.Subscribe
	(*To_OrderSubmit)(nil),    // 7: sideswap.proxy.bitfinex.proto.To.OrderSubmit
	(*To_Withdraw)(nil),       // 8: sideswap.proxy.bitfinex.proto.To.Withdraw
	(*To_Transfer)(nil),       // 9: sideswap.proxy.bitfinex.proto.To.Transfer
	(*To_Movements)(nil),      // 10: sideswap.proxy.bitfinex.proto.To.Movements
	(*From_BookUpdate)(nil),   // 11: sideswap.proxy.bitfinex.proto.From.BookUpdate
	(*From_OrderConfirm)(nil), // 12: sideswap.proxy.bitfinex.proto.From.OrderConfirm
	(*From_WalletUpdate)(nil), // 13: sideswap.proxy.bitfinex.proto.From.WalletUpdate
	(*From_Withdraw)(nil),     // 14: sideswap.proxy.bitfinex.proto.From.Withdraw
	(*From_Transfer)(nil),     // 15: sideswap.proxy.bitfinex.proto.From.Transfer
	(*From_Movements)(nil),    // 16: sideswap.proxy.bitfinex.proto.From.Movements
}
var file_proto_bitfinex_proto_depIdxs = []int32{
	5,  // 0: sideswap.proxy.bitfinex.proto.To.login:type_name -> sideswap.proxy.bitfinex.proto.To.Login
	6,  // 1: sideswap.proxy.bitfinex.proto.To.subscribe:type_name -> sideswap.proxy.bitfinex.proto.To.Subscribe
	7,  // 2: sideswap.proxy.bitfinex.proto.To.order_submit:type_name -> sideswap.proxy.bitfinex.proto.To.OrderSubmit
	8,  // 3: sideswap.proxy.bitfinex.proto.To.withdraw:type_name -> sideswap.proxy.bitfinex.proto.To.Withdraw
	9,  // 4: sideswap.proxy.bitfinex.proto.To.transfer:type_name -> sideswap.proxy.bitfinex.proto.To.Transfer
	10, // 5: sideswap.proxy.bitfinex.proto.To.movements:type_name -> sideswap.proxy.bitfinex.proto.To.Movements
	11, // 6: sideswap.proxy.bitfinex.proto.From.book_update:type_name -> sideswap.proxy.bitfinex.proto.From.BookUpdate
	12, // 7: sideswap.proxy.bitfinex.proto.From.order_confirm:type_name -> sideswap.proxy.bitfinex.proto.From.OrderConfirm
	13, // 8: sideswap.proxy.bitfinex.proto.From.wallet_update:type_name -> sideswap.proxy.bitfinex.proto.From.WalletUpdate
	14, // 9: sideswap.proxy.bitfinex.proto.From.withdraw:type_name -> sideswap.proxy.bitfinex.proto.From.Withdraw
	15, // 10: sideswap.proxy.bitfinex.proto.From.transfer:type_name -> sideswap.proxy.bitfinex.proto.From.Transfer
	16, // 11: sideswap.proxy.bitfinex.proto.From.movements:type_name -> sideswap.proxy.bitfinex.proto.From.Movements
	1,  // 12: sideswap.proxy.bitfinex.proto.From.error:type_name -> sideswap.proxy.bitfinex.proto.Error
	0,  // 13: sideswap.proxy.bitfinex.proto.From.BookUpdate.price:type_name -> sideswap.proxy.bitfinex.proto.Price
	2,  // 14: sideswap.proxy.bitfinex.proto.From.Movements.movements:type_name -> sideswap.proxy.bitfinex.proto.Movement
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_bitfinex_proto_init() }
func file_proto_bitfinex_proto_init() {
	if File_proto_bitfinex_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_bitfinex_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To_Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To_Subscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To_OrderSubmit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To_Withdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*To_Movements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From_BookUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From_OrderConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From_WalletUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From_Withdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bitfinex_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*From_Movements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_bitfinex_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*To_Login_)(nil),
		(*To_Subscribe_)(nil),
		(*To_OrderSubmit_)(nil),
		(*To_Withdraw_)(nil),
		(*To_Transfer_)(nil),
		(*To_Movements_)(nil),
	}
	file_proto_bitfinex_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*From_BookUpdate_)(nil),
		(*From_OrderConfirm_)(nil),
		(*From_WalletUpdate_)(nil),
		(*From_Withdraw_)(nil),
		(*From_Transfer_)(nil),
		(*From_Movements_)(nil),
		(*From_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_bitfinex_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_bitfinex_proto_goTypes,
		DependencyIndexes: file_proto_bitfinex_proto_depIdxs,
		MessageInfos:      file_proto_bitfinex_proto_msgTypes,
	}.Build()
	File_proto_bitfinex_proto = out.File
	file_proto_bitfinex_proto_rawDesc = nil
	file_proto_bitfinex_proto_goTypes = nil
	file_proto_bitfinex_proto_depIdxs = nil
}
